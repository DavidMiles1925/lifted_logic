!function(){"use strict";var e={705:function(e,t,n){var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"// extracted by mini-css-extract-plugin\nexport {};","",{version:3,sources:["webpack://./src/pages/index.css"],names:[],mappings:"AAAA;QACQ,CAAA",sourcesContent:["// extracted by mini-css-extract-plugin\nexport {};"],sourceRoot:""}]),t.Z=i},645:function(e){e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:function(e){e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:function(e){var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=n(u),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var m=r(f,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:function(e){var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:function(e){e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:function(e,t,n){e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:function(e){e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:function(e){e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.nc=void 0,function(){var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),c=n(565),s=n.n(c),d=n(216),l=n.n(d),u=n(589),p=n.n(u),f=n(705),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),t()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const h=document.getElementById("reasons");function v(){var e=new google.maps.Map(document.getElementById("map"),{center:{lat:38.98732865633846,lng:-94.66840803164911},zoom:15,mapId:"d4770bfb3e9cda45"});new google.maps.Marker({position:{lat:38.98732865633846,lng:-94.66840803164911},map:e,title:"Lifted Logic",label:{text:"Lifted Logic",color:"#ffffff",fontSize:"32px"}})}console.log(h),h.addEventListener("change",(function(){"Select One"!==h.value?h.classList.add("selected"):h.classList.remove("selected")}));const g=document.querySelector(".card__container"),y=document.getElementById("prevButton"),b=document.getElementById("nextButton"),x=document.querySelector(".card").offsetWidth,S=parseInt(getComputedStyle(document.querySelector(".card")).marginRight);[{imageSrc:"trapsoul",title:"Trapsoul",content:"Bryson Tiller",content_2:"Bryson Djuan Tiller, is an American singer, songwriter and rapper. Born in Louisville, Kentucky, he started his career in 2011, releasing the debut mixtape titled Killer Instinct Vol.1."},{imageSrc:"sonder",title:"Sonder Sons",content:"Meet the Band",content_2:"Sonder Sons, the innovative new age artist, paints auditory landscapes that echo a harmony of precision. Their compositions blend intricate layers of sound that resonates with the soul. "},{imageSrc:"paradise",title:"Paradise",content:"Symphonic Vision",content_2:"Paradise Today, the visionary DJ, orchestrates electronic symphonies that flow like data streams. Their beats and rhythms are a fusion of technical precision and the raw energy of a dance floor."},{imageSrc:"needed",title:"Needed",content:"More Than Anything",content_2:"Bryson Djuan Tiller, is an American singer, songwriter and rapper. Born in Louisville, Kentucky, he started his career in 2011, releasing the debut mixtape titled Killer Instinct Vol.1."},{imageSrc:"david",title:"David Miles",content:"Kinda Out There",content_2:"David is a fun loving individual, who hopes to grow his skills, and do lots more web design in the future."}].forEach((e=>{const t=function(e,t,n,o){const r=document.createElement("div");r.classList.add("card");const a=document.createElement("div");a.classList.add("card__image"),a.classList.add(`card__image_type_${e}`);const i=document.createElement("div");i.classList.add("card__info");const c=document.createElement("h2");c.classList.add("card__heading"),c.textContent=t;const s=document.createElement("p");s.classList.add("card__content1"),s.textContent=n;const d=document.createElement("p");return d.classList.add("card__content2"),d.textContent=o,r.appendChild(a),r.appendChild(i),i.appendChild(c),i.appendChild(s),i.appendChild(d),r}(e.imageSrc,e.title,e.content,e.content_2);g.appendChild(t)}));const C=g.childElementCount*(x+S);let L=0;function _(){g.style.transform=`translateX(-${L}px)`}!function(){const e=g.querySelector(".card").cloneNode(!0);g.appendChild(e),console.log("appended"),console.log(e)}(),google.maps.event.addDomListener(window,"load",v),y.addEventListener("click",(()=>{L=(L-x-S+C)%C,_()})),b.addEventListener("click",(()=>{L=(L+x+S)%C,_()})),google.maps.event.addDomListener(window,"load",v)}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,