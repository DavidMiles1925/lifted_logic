!function(){"use strict";const t=document.getElementById("drop");t.addEventListener("change",(function(){"Select One"!==t.value?t.classList.add("selected"):t.classList.remove("selected")})),new class{constructor(t,e){this._settings=t,this._formElement=e}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._settings.inactiveButtonClass)):(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._settings.inactiveButtonClass))}_showInputError(t,e){const n=this._formElement.querySelector(`.${t.id}-error`);t.classList.add(this._settings.inputErrorClass),n.textContent=e,n.classList.add(this._settings.errorClass)}_hideInputError(t){const e=this._fieldsetElement.querySelector(`.${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_handleInputChange(t){this._checkInputValidity(t)}_setEventListeners(){this._inputList=[...this._fieldsetElement.querySelectorAll(this._settings.inputSelector)],this._buttonElement=this._fieldsetElement.querySelector(this._settings.submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(()=>this._handleInputChange(t)))}))}enableValidation(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._fieldsetElement=this._formElement.querySelector(this._settings.formFieldsetSelector),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}}({formFieldsetSelector:".form__fieldset",inputSelector:".contact__text-box",submitButtonSelector:".contact__learn-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},document.querySelector(".contact__form")).enableValidation();const e=document.querySelector(".card__container"),n=document.getElementById("prevButton"),i=document.getElementById("nextButton"),s=document.querySelector(".card").offsetWidth,o=parseInt(getComputedStyle(document.querySelector(".card")).marginRight);[{imageSrc:"trapsoul",title:"Trapsoul",content:"Bryson Tiller",content_2:"Bryson Djuan Tiller, is an American singer, songwriter and rapper. Born in Louisville, Kentucky, he started his career in 2011, releasing the debut mixtape titled Killer Instinct Vol.1."},{imageSrc:"sonder",title:"Sonder Sons",content:"Meet the Band",content_2:"Sonder Sons, the innovative new age artist, paints auditory landscapes that echo a harmony of precision. Their compositions blend intricate layers of sound that resonates with the soul. "},{imageSrc:"paradise",title:"Paradise",content:"Symphonic Vision",content_2:"Paradise Today, the visionary DJ, orchestrates electronic symphonies that flow like data streams. Their beats and rhythms are a fusion of technical precision and the raw energy of a dance floor."},{imageSrc:"needed",title:"Needed",content:"More Than Anything",content_2:"This description is needed."},{imageSrc:"david",title:"David Miles",content:"Kinda Out There",content_2:"David is a fun loving individual, who hopes to grow his skills, and do lots more web design in the future."}].forEach((t=>{const n=function(t,e,n,i){const s=document.createElement("div");s.classList.add("card");const o=document.createElement("div");o.classList.add("card__image"),o.classList.add(`card__image_type_${t}`);const r=document.createElement("div");r.classList.add("card__info");const a=document.createElement("h2");a.classList.add("card__heading"),a.textContent=e;const d=document.createElement("p");d.classList.add("card__content1"),d.textContent=n;const l=document.createElement("p");return l.classList.add("card__content2"),l.textContent=i,s.appendChild(o),s.appendChild(r),r.appendChild(a),r.appendChild(d),r.appendChild(l),s}(t.imageSrc,t.title,t.content,t.content_2);e.appendChild(n)}));const r=e.childElementCount*(s+o);let a=0;function d(){e.style.transform=`translateX(-${a}px)`}!function(){const t=e.querySelector(".card").cloneNode(!0);e.appendChild(t)}(),window.addEventListener("load",(function(){const t=new google.maps.Map(document.getElementById("map"),{center:{lat:38.98732865633846,lng:-94.66840803164911},zoom:15,mapId:"d4770bfb3e9cda45"});new google.maps.Marker({position:{lat:38.98732865633846,lng:-94.66840803164911},map:t,title:"Lifted Logic"})})),n.addEventListener("click",(()=>{a=(a-s-o+r)%r,d()})),i.addEventListener("click",(()=>{a=(a+s+o)%r,d()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,